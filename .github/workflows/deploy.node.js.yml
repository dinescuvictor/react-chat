on:
  #push:
  #  branches:
  #    - dev
      
  workflow_dispatch:

name: "[MASTER] Deploy react-chat"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: lts/-1
          
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit == 'false' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install
        
      - name: Install dependencies
        run: npm audit fix

      - name: Build dist
        run: CI=false npm run build
        
      - name: Set up key
        run: |
          set -eu
          mkdir "$HOME/.ssh"
          echo "${{ secrets.key }}" > "$HOME/.ssh/key"
          chmod 600 "$HOME/.ssh/key"
      - name: Sync files
        shell: bash
        env:
          USER: ${{ secrets.user }}
          HOST: ${{ secrets.host }}
          DIST: ${{ secrets.dist }}
        run: |
          rsync -e "ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no" -avz /home/runner/work/react-chat/react-chat/build*  $USER@$HOST:$DIST/
          ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no $USER@$HOST "cd $DIST && docker-compose up -d --force-recreate"
